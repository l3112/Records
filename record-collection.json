{"index.js":"// Setup\nvar collection = {\n    \"2548\": {\n      \"album\": \"Slippery When Wet\",\n      \"artist\": \"Bon Jovi\",\n      \"tracks\": [ \n        \"Let It Rock\", \n        \"You Give Love a Bad Name\" \n      ]\n    },\n    \"2468\": {\n      \"album\": \"1999\",\n      \"artist\": \"Prince\",\n      \"tracks\": [ \n        \"1999\", \n        \"Little Red Corvette\" \n      ]\n    },\n    \"1245\": {\n      \"artist\": \"Robert Palmer\",\n      \"tracks\": [ ]\n    },\n    \"5439\": {\n      \"album\": \"ABBA Gold\"\n    }\n};\n// Keep a copy of the collection for tests\nvar collectionCopy = JSON.parse(JSON.stringify(collection));\n\n// Only change code below this line\nfunction updateRecords(id, prop, value) {\n  if(!value){ // if there is no value in general \n  delete collection[id][prop]; // delete the entire collection \n  return collection; // print it again.\n  }\n\n  if(prop !== \"tracks\" && value){ // if a property does not have any tracks (& value?)\n    collection[id][prop] = value; // give one? Not sure\n  }\n  else{\n    if(!collection[id].hasOwnProperty(\"tracks\")) collection[id].tracks = []; // make a tracks array\n    collection[id].tracks.push(value); // said tracks array is at the end\n  }\n\n  return collection;\n}\n\n// Alter values below to test your code\nupdateRecords(2548, \"tracks\", \"\");\n"}